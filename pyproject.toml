[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "codebase-timeline-visualizer"
version = "1.0.0"
description = "Interactive visualization of codebase evolution over time"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "gitpython==3.1.30",
    "pydriller==2.5",
    "click==8.1.7",
    "flask==3.0.0",
    "flask-cors==4.0.0",
    "pytest==7.4.3",
    "python-dateutil==2.8.2",
    "typing-extensions==4.8.0",
]

[project.optional-dependencies]
dev = [
    "black",
    "flake8",
    "mypy",
    "pytest-cov",
    "radon",
    "pylint",
    "bandit",
    "safety",
]
docs = [
    "sphinx",
    "sphinx-rtd-theme",
]

[project.scripts]
codevis = "cli.src.main:main"

[project.urls]
Homepage = "https://github.com/yourusername/codebase-timeline-visualizer"
Documentation = "https://yourusername.github.io/codebase-timeline-visualizer/"
Repository = "https://github.com/yourusername/codebase-timeline-visualizer.git"
Issues = "https://github.com/yourusername/codebase-timeline-visualizer/issues"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "git.*",
    "pydriller.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "backend/tests",
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.coverage.run]
source = ["backend/src", "cli/src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]