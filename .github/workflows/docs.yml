name: Deploy Documentation

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages-docs"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install docs dependencies
      run: |
        npm install -g docsify-cli
        pip install mkdocs mkdocs-material

    - name: Build documentation
      run: |
        # Create docs directory if it doesn't exist
        mkdir -p docs-build

        # Copy existing docs
        cp -r docs/* docs-build/ 2>/dev/null || true

        # Generate API documentation
        python -c "
        import os
        import json

        # Create API docs
        api_docs = '''
        # API Documentation

        ## Timeline Data Format

        The timeline data is exported as JSON with the following structure:

        ```json
        {
          \"metadata\": {
            \"total_commits\": 150,
            \"total_contributors\": 5,
            \"total_files\": 42,
            \"date_range\": {
              \"start\": \"2023-01-01T00:00:00\",
              \"end\": \"2023-12-31T23:59:59\"
            }
          },
          \"timeline\": [...],
          \"contributors\": {...},
          \"files\": {...}
        }
        ```

        ## CLI Commands

        - `codevis analyze <repo>` - Analyze repository
        - `codevis serve` - Start web interface
        - `codevis export <data> --format html` - Export visualization
        '''

        with open('docs-build/api.md', 'w') as f:
            f.write(api_docs)
        "

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload documentation artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./docs-build

  deploy:
    environment:
      name: github-pages-docs
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4