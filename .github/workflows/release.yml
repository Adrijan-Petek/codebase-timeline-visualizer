name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        generate_release_notes: true
        files: |
          dist/*.tar.gz
          dist/*.whl
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-frontend-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package.json

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Build frontend
      run: |
        cd frontend
        npm run build

    - name: Create frontend artifact
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: frontend/build/

  create-demo:
    runs-on: ubuntu-latest
    needs: [release, build-frontend-release]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download frontend build
      uses: actions/download-artifact@v3
      with:
        name: frontend-build
        path: demo/

    - name: Create demo repository
      run: |
        mkdir demo-repo
        cd demo-repo
        git init
        git config user.name "Demo User"
        git config user.email "demo@example.com"

        # Create sample files
        echo "# Demo Repository" > README.md
        echo "print('Hello from demo!')" > main.py
        mkdir src
        echo "def hello():" > src/utils.py
        echo "    return 'world'" >> src/utils.py

        git add .
        git commit -m "Initial demo commit"

        # Add more commits
        echo "print('Enhanced demo')" > main.py
        git add .
        git commit -m "Enhance main.py"

        echo "class DemoClass:" > src/demo.py
        echo "    pass" >> src/demo.py
        git add .
        git commit -m "Add demo class"

    - name: Generate demo timeline
      run: |
        python -m cli.src.main analyze ./demo-repo --output demo/timeline.json

    - name: Upload demo artifact
      uses: actions/upload-artifact@v3
      with:
        name: demo-site
        path: demo/